#!/sbin/openrc-run
# Copyright 2019 Gentoo Authors
# Distributed under the terms of the GNU General Public License v2

nodename="${RC_SVCNAME#net[.]}"
description="node ${nodename}"

depend() {
	if [[ "${nodename}" != node ]];then
		if [[ "${nodename}" != $(hostname) ]];then
			need "node-storage_${nodename}" "net.${nodename}" !node-dhcpd_anynode !node-bootsrv_anynode
		fi
	fi
}

__status() {
    level=$(ssh -o ConnectTimeout=1 "root@${nodename}" "rc-status -r" 2> /dev/null)
	for uplevel in ${uplevels};do
    	if [[ "${level}" = "${uplevel}" ]] && ! service_stopping "${nodename}"; then
			mark_service_started "${nodename}"
			break
		fi
	done
	service_started "${nodename}"
}

status() {
 	if [[ "${nodename}" != $(hostname) ]];then
		__status
	fi
    default_status
}

__power_on(){
        # optional power on 
    	if [[ -n "${power_on_cmd}" ]]; then
            $power_on_cmd || eend 1 || return
        fi
}

__power_off(){
        # optional power off 
    	if [[ -n "${power_off_cmd}" ]]; then
            $power_off_cmd || eend 1 || return
        fi
}

__wol(){
        # optional wake on lan
	einfo "wake on lan ..."
        if [[ -n "${wol_interface_name}" ]] && [[ -n "${mac_addr}" ]] ; then
    	wol -i "${network_addr}" "${mac_addr}" || eend 1 || return
        fi
}

__wol_mode_setup(){
        if [[ -n "${wol_interface_name}" ]] ; then
            [[ -z "${wol_mode_setup}" ]] && wol_mode_setup="g" # default to g(magic code)
		    ssh -o ConnectTimeout=1 root@${nodename} ethtool -s $wol_interface_name wol "${wol_mode_setup}" || eend 1 || return
		    einfo "$(ssh -o ConnectTimeout=1 root@${nodename} ethtool $wol_interface_name |grep 'Wake-on:')"
        fi
}

start() {
 	if [[ "${nodename}" != $(hostname) ]];then
    	ebegin "Starting ${nodename}"
    	mark_service_starting "${nodename}"
    	ping -c1 -q ${nodename}  1> /dev/null 2> /dev/null
    	r1=$?
        rc-service "node-bootsrv_${nodename}" start || eend "failed to start bootsrv for node ${nodename}" || return
        rc-service "node-dhcpd_${nodename}"   start || eend "failed to start dhcpd for node ${nodename}"   || return


        # optional power on 
        __power_on
        # optional wake on lan
        __wol

        if [[ $r1 == 1 ]] ; then
    	    einfo "waiting ${bootwait_time} sec , ${nodename} need some time to come up"
            sleep ${bootwait_time}
        fi
    	einfo "maybe ${nodename} is awake now, checking"

    	check=0
    	while true;do
    	  ping -c1 -q ${nodename}  1> /dev/null 2> /dev/null
    	  r1=$?
    	  if [ $r1 == 0 ];then
		  	if __status 1>/dev/null 2>/dev/null ;then
				if [[ -n $finish_cmd ]];then
					einfo "running final task"
					$finish_cmd && eend 0 || eend 1 || eerror "Final task failed.Cmd was:\"${finish_cmd}\""
					else
						eend 0
				fi
				break
			fi
    	  else
    	      sleep 1
              __wol
    	  fi
    	  sleep 1
    	done
	fi
    eend 0
}

stop() {
 	if [[ "${nodename}" != $(hostname) ]];then
		ebegin "Stopping ${nodename}..."
        __wol_mode_setup
		ssh -o ConnectTimeout=2 root@${nodename} openrc-shutdown -p now 1> /dev/null 2> /dev/null || eend 1 || return
		r0=$?
		if [ $r0 == 0 ];then
			## shutdown should be in progress...
			sleep 7
		else
			ewarn warning , first connection attempt failed
		fi
		check=0
		while true;do
			ping -c1 -q ${nodename}  1> /dev/null 2> /dev/null
			r1=$?
			
			if [ "${r1}" == "1" ] ;then
			    if [ "${check}" == "ok" ];then
			          break
			    fi
			    check="ok"
			fi

			#ssh -o ConnectTimeout=1 root@${nodename} shutdown -h now 2> /dev/null 1> /dev/null
			sleep 3
		done
		__power_off
		retcode="$?"
		# in case of instant restart
		# need cooldown
		sleep 3
		eend $retcode
	fi
}

