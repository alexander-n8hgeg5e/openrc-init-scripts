#!/sbin/openrc-run
# Copyright 2019 Gentoo Authors
# Distributed under the terms of the GNU General Public License v2

nodename="${RC_SVCNAME#net[.]}"
description="node ${nodename}"

depend() {
	if [[ "${nodename}" != node ]];then
		if [[ "${nodename}" != $(hostname) ]];then
			need "node-storage_${nodename}" "node-bootsrv_${nodename}" node-net_${nodename} node-dhcpd_${nodename}
		fi
	fi
}

__status() {
    level=$(ssh -o ConnectTimeout=1 "root@${nodename}" "rc-status -r" 2> /dev/null)
	for uplevel in ${uplevels};do
    	if [[ "${level}" = "${uplevel}" ]] && ! service_stopping "${nodename}"; then
			mark_service_started "${nodename}"
			break
		fi
	done
	service_started "${nodename}"
}

status() {
 	if [[ "${nodename}" != $(hostname) ]];then
		__status
	fi
    default_status
}

start() {
 	if [[ "${nodename}" != $(hostname) ]];then
    	ebegin "Starting ${nodename}"
    	mark_service_starting "${nodename}"
		einfo $wait_network
    	sudo ethtool "${network_if}" | grep -q "Speed: ${network_if_default_speed}M"
    	r_full_speed=$?
    	sudo ethtool "${network_if}"|grep -q 'Link detected: yes'
    	r_has_link=$?

        if [ $r_has_link -eq 0 ] ; then
    	    # network is active 
    	    # if the network is active the thing is at least powered on
    	    # only do a wol to wake it up in case it's sleeping
    	    wol -i "${network_addr}" "${mac_addr}" 1> /dev/null 2> /dev/null
    	else
    	    # no network link
    	    # full wakeup with waiting
    	    $power_on_cmd 1> /dev/null
    	    wol -i "${network_addr}" "${mac_addr}" 1> /dev/null 2> /dev/null
			sleep 1
    	    wol -i "${network_addr}" "${mac_addr}" 1> /dev/null 2> /dev/null
    	    einfo "waiting ${bootwait_time} sec , ${nodename} need some time to come up"
            sleep ${bootwait_time}
    	    einfo "maybe ${nodename} is awake now"
    	fi

    	check=0
    	while true;do
    	  ping -c1 -q ${nodename}  1> /dev/null 2> /dev/null
    	  r1=$?
    	  if [ $r1 == 0 ];then
		  	if __status 1>/dev/null 2>/dev/null ;then
				if [[ -n $finish_cmd ]];then
					einfo "running final task"
					$finish_cmd && eend 0 || eend 1 || eerror "Final task failed.Cmd was:\"${finish_cmd}\""
					else
						eend 0
				fi
				break
			fi
    	  else
    	      sleep 1
    	      wol -i "${network_addr}" "${mac_addr}" 1> /dev/null 2> /dev/null
    	  fi
    	  sleep 1
    	done
	fi
}

stop() {
 	if [[ "${nodename}" != $(hostname) ]];then
		ebegin "Stopping ${nodename}..."
		ssh -o ConnectTimeout=1 root@${nodename} ethtool -s $wol_interface_name wol umbg || eend 1 || return
		einfo "$(ssh -o ConnectTimeout=1 root@${nodename} ethtool $wol_interface_name |grep 'Wake-on:')"
		ssh -o ConnectTimeout=2 root@${nodename} openrc-shutdown -p now 1> /dev/null 2> /dev/null || eend 1 || return
		r0=$?
		if [ $r0 == 0 ];then
			## shutdown should be in progress...
			sleep 7
		else
			ewarn warning , first connection attempt failed
		fi
		check=0
		while true;do
			ping -c1 -q ${nodename}  1> /dev/null 2> /dev/null
			r1=$?
			
			#sudo ethtool "${network_if}"|grep -q "Speed: 100Mb/s"
			#r2=$?
			#
			#sudo ethtool "${network_if}"|grep -q "Speed: 10Mb/s"
			#r3=$?
			
			#if [ "${r1}" == "1" ] && [ "${r2}" == "0" ];then
			#    if [ "${check}" == "ok" ];then
			#          break
			#    fi
			#    check="ok"
			#elif [ "${r1}" == "1" ] && [ "${r3}" == "0" ];then
			#    if [ "${check}" == "ok" ];then
			#          break
			#    fi
			#    check="ok"
			#fi

			if [ "${r1}" == "1" ] ;then
			    if [ "${check}" == "ok" ];then
			          break
			    fi
			    check="ok"
			fi

			#ssh -o ConnectTimeout=1 root@${nodename} shutdown -h now 2> /dev/null 1> /dev/null
			sleep 3
		done
		$power_off_cmd 1> /dev/null
		retcode="$?"
		# in case of instant restart
		# need cooldown
		sleep 3
		eend $retcode
	fi
}

