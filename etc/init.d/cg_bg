#!/sbin/openrc-run
# Copyright 2020 Gentoo Authors
# Distributed under the terms of the GNU General Public License v2

description='setup cgroupv2 "background"'
command=''

depend() {
    need cgroups
}


cgroup2_remove() {
	einfo skipping cgroup2 remove
}

start() {
	CG_BG_DEFAULT_IOLAT=10000000
	CG_BG_EXTRA_DEFAULT_DEVICES="sda sdb sbc sdd"
    cgroup_path="$(cgroup2_find_path)"
	[ -n "${cgroup_path}" ] || return 1
	[ -d "${cgroup_path}" ] || mkdir "${cgroup_path}"
    rc_cgroup_path="${cgroup_path}/${RC_SVCNAME}"
	[ -d "${rc_cgroup_path}" ] || mkdir "${rc_cgroup_path}"

    # setup permissions
    chown :cg_bg "${cgroup_path}/cgroup.procs" "${rc_cgroup_path}/cgroup.procs"
    chmod go+rw  "${cgroup_path}/cgroup.procs" "${rc_cgroup_path}/cgroup.procs"
    cgroup2_set_limits
	einfo "gen_io_lat_strings args: $CG_BG_DEFAULT_IOLAT $CG_BG_EXTRA_DEFAULT_DEVICES"
	lat_strings="$(gen_io_lat_strings $CG_BG_DEFAULT_IOLAT $CG_BG_EXTRA_DEFAULT_DEVICES)"
    einfo "lat strings: ${lat_strings}"

 	io_cost_qos_strings="$(gen_cgroup_io_controller_setup_strings costq $CG_BG_EXTRA_DEFAULT_DEVICES)"
    einfo "io.cost.qos setup lines: ${io_cost_qos_strings_strings}"

	IFS="\n"
	for line in "${lat_strings}"; do
		einfo "\"${line}\"" \> "${rc_cgroup_path}/io.latency"
		echo "${line}" > "${rc_cgroup_path}/io.latency"
	done
	for line in "${io_cost_qos_strings}"; do
		einfo "\"${line}\"" \> "${cgroup_path}/io.cost_qos"
		echo "${line}" > "${cgroup_path}/io.cost_qos"
	done

	wf="${rc_cgroup_path}/cpu.weight"
	[[ -e "${wf}" ]] && echo 1 > "${wf}"

	wf="${rc_cgroup_path}/io.weight"
	[[ -e "${wf}" ]] && echo 1 > "${wf}"
}

stop(){
	einfo "stopping ${RC_SVCNAME}"
}
