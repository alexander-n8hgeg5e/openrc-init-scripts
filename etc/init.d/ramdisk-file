#!/sbin/openrc-run
# Copyright (c) 2007-2015 The OpenRC Authors.
# See the Authors file at the top-level directory of this distribution and
# https://github.com/OpenRC/openrc/blob/master/AUTHORS
#
# This file is part of OpenRC. It is subject to the license terms in
# the LICENSE file found in the top-level directory of this
# distribution and at https://github.com/OpenRC/openrc/blob/master/LICENSE
# This file may not be copied, modified, propagated, or distributed
# except according to the terms contained in the LICENSE file.

name="${RC_SVCNAME}"
description="provides a file on ramdisk/tmpfs filesystem"

run_dir="/run"
imgname="${RC_SVCNAME#*_}.img" # imgname after first underscore
imgfilename="ramdisk-file_${imgname}" # get consistent prefix for img files
imgfilepath="${run_dir}/${imgfilename}"

[[ -z $max_allocate_space ]] && max_allocate_space=1485760
[[ -z $min_allocate_space ]] && min_allocate_space=12400

depend()
{
    need run_subdirs
}

start()
{
	        ebegin "Activating ${RC_SVCNAME}"
            free_space_k="$(\
                                df -h -Bk --output=avail "${run_dir}"|\
                                tail -n+2|\
                                head -n1|\
                                sed 's/[^0-9]//g'\
                              )"\
            || free_space_k="-1"
            if [[ ${free_space_k} -gt ${max_allocate_space} ]];then
                allocate_space_k="${max_allocate_space}"
            elif [[ ${free_space_k} -ge "${min_allocate_space}" ]];then
                allocate_space_k="${free_space_k}"
            else
                allocate_space_k="-1"
            fi
            if [[ $allocate_space_k -gt 0 ]];then
                einfo "space = $(( ${allocate_space_k}/1024 )) Mib"                            ||  eend 1 || return
		        fallocate --length "$(( ${allocate_space_k} * 1024 ))" "${imgfilepath}"        ||  eend 1 || return
            else
                eend 1 || return
            fi
            eend 0
}

stop()
{
	ebegin "Deactivating ${RC_SVCNAME}"
    rm -f "${imgfilepath}"                                   || eend 1 || return
    eend 0
}
